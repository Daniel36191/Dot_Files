{ config, pkgs, inputs, lib, ... }:
{
imports =
  [
    ./apps.nix
    # ./vm.nix #Virtual machines
    # ./vr.nix
  ];



#######
# SSH #
#######
# services.openssh = {
#   enable = true;
#   ports = [ 54321 ];
#   settings = {
#     PasswordAuthentication = true;
#     AllowUsers = null; # Allows all users by default. Can be [ "user1" "user2" ]
#     UseDns = true;
#     X11Forwarding = false;
#     PermitRootLogin = "prohibit-password"; # "yes", "without-password", "prohibit-password", "forced-commands-only", "no"
#   };
# };


###################
### Core Config ###
###################

########
# Apps #
########
environment.systemPackages = with pkgs; [
# Root Apps
grub2
polkit
polkit_gnome

# System_Apps
rofi
kitty
unzip
wget
git
android-tools # ADB
jmtpfs# Connect android files system
networkmanagerapplet
networkmanager_dmenu
stow# Dot file managment

# Sound
playerctl
pavucontrol
];


############
# Hyprland #
############
programs.hyprland.enable = true;
programs.hyprland.xwayland.enable = true;


##########
# Nvidia #
##########
# hardware.nvidia.open = true;
hardware.graphics = {
  enable = true;
};
services.xserver.videoDrivers = ["nvidia"];
hardware.nvidia = {

    # Modesetting is required.
    modesetting.enable = true;

    # Nvidia power management. Experimental, and can cause sleep/suspend to fail.
    # Enable this if you have graphical corruption issues or application crashes after waking
    # up from sleep. This fixes it by saving the entire VRAM memory to /tmp/ instead 
    # of just the bare essentials.
    powerManagement.enable = false;

    # Fine-grained power management. Turns off GPU when not in use.
    # Experimental and only works on modern Nvidia GPUs (Turing or newer).
    powerManagement.finegrained = false;

    # Use the NVidia open source kernel module (not to be confused with the
    # independent third-party "nouveau" open source driver).
    # Support is limited to the Turing and later architectures. Full list of 
    # supported GPUs is at: 
    # https://github.com/NVIDIA/open-gpu-kernel-modules#compatible-gpus 
    # Only available from driver 515.43.04+
    # Currently alpha-quality/buggy, so false is currently the recommended setting.
    open = false;

    # Enable the Nvidia settings menu,
	# accessible via `nvidia-settings`.
    nvidiaSettings = true;

    # Optionally, you may need to select the appropriate driver version for your specific GPU.
    package = config.boot.kernelPackages.nvidiaPackages.stable;
  };

##############
# Networking #
##############
networking = {
  hostName = "nixos";
  networkmanager.enable = true;

  firewall = {
  enable = false;
};

  nameservers = [ "192.168.0.141" ];
  dhcpcd.extraConfig = "nohook resolv.conf";
  networkmanager.dns = "none";
};
environment.etc = {
"resolv.conf".text = "# Generated by /etc/nixos/config/main.nix\nnameserver 192.168.0.141\noptions edns0\n 
";
};


########
# User #
########
users.users.daniel = {
  isNormalUser = true;
  description = "Daniel";
  extraGroups = [ "networkmanager" "wheel" "openrazer" ];
  packages = with pkgs; [];
  # Set password with passwd
};
services.getty.autologinUser = "daniel";

#Garbage collection
nix.gc = {
  automatic = true;
  dates = "weekly";
  options = "--delete-older-than 30d";
};
}
